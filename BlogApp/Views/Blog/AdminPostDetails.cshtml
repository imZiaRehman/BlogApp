@model BlogApp.ViewModels.PostViewModel


@{
    ViewBag.Title = "Post Details Page";
    if (User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else if (User.IsInRole("Moderator"))
    {
        Layout = "~/Views/Shared/_ModeratorLayout.cshtml";
    }
}

<div class="post-container">
    <h2>@Model.Title</h2>

    <div class="post-header">
        <p class="small-font">Created by: @Model.UserName | Date: @Model.CreatedAt</p>
    </div>

    <div class="post-content">
        @Html.Raw(Model.Content)
    </div>

    <div class="post-details">

        <p>Likes: <span id="likeCount">@Model.Likes.Count</span></p>

        @using (Html.BeginForm("LikePost", "Blog", FormMethod.Post))
        {

            @Html.HiddenFor(model => model.UserId)
            @Html.HiddenFor(model => model.PostId)

            <button type="submit" id="likeButton" class="btn btn-primary LikePost">
                @if (Model.UserHasLiked)
                {
                    <text>Unlike</text>
                }
                else
                {
                    <text>Like</text>
                }
            </button>
        }

        @using (Html.BeginForm("DeletePost", "Blog", FormMethod.Post))
        {

            @Html.HiddenFor(model => model.PostId)

            <button type="submit" id="deleteButton" class="btn btn-danger">
                Delete
            </button>
        }


        @if (Model.UserIdOfUserAccessingPost != Model.UserId)
        {

            using (Html.BeginForm("AddSuggestions", "Blog", FormMethod.Get))
            {

                @Html.HiddenFor(model => model.PostId)

                <button type="submit" id="ReportPost" class="btn btn-success" style="margin: 10px 0px;">
                    Add Suggestion
                </button>
            }

        }

    </div>




    <div class="add-comment-section">
        <!-- Add Comment Form -->

        @{
            var commentViewModel = new BlogApp.ViewModels.CommentViewModel
            {
                UserId = Model.UserId,
                PostId = Model.PostId

            };
        }

        @Html.Partial("AddComment", commentViewModel)


        <!-- Display all comments -->
        <div class="comments">
            @foreach (var comment in Model.Comments)
            {
                @Html.Partial("CommentView", comment)
            }
        </div>

    </div>

</div>
